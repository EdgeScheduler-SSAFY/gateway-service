server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${eureka.host.url}

spring:
  application:
    name: gateway-service
  config:
    import:
      - optional:env.yml
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
        - id: first-service
#          uri: http://localhost:8081/
          uri: lb://MY-FIRST-SERVICE
          predicates:
            - Path=/first-service/**
          filters:
#            - AddRequestHeader=first-request, first-request-header2
#            - AddResponseHeader=first-response, first-response-header2
            - CustomFilter
        - id: second-service
#          uri: http://localhost:8082/
          uri: lb://MY-SECOND-SERVICE
          predicates:
            - Path=/second-service/**
          filters:
#            - AddRequestHeader=second-request, second-request-header2
#            - AddResponseHeader=second-response, second-response-header2
           - name: CustomFilter
           - name: LoggingFilter
             args:
               baseMessage: Hi, there.
               preLogger: true
               postLogger: true

        - id: notification-service
          uri: lb://NOTIFICATION-SERVICE
          predicates:
            - Path=/notification-service/**
            # - Method=GET, POST # 전체 허용하려면 생략
          filters:
            - RewritePath=/notification-service/(?<segment>.*), /$\{segment}
#            - JwtAuthenticationFilter

        - id: schedule-service
          uri: lb://SCHEDULE-SERVICE
          predicates:
            - Path=/schedule-service/**
            # - Method=GET, POST # 전체 허용하려면 생략
          filters:
            - RewritePath=/schedule-service/(?<segment>.*), /$\{segment}
#            - JwtAuthenticationFilter

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/uncheck
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - CustomFilter
            - LoggingFilter
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/check
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - CustomFilter
            - LoggingFilter
            - JwtAuthenticationFilter
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/auth/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - CustomFilter
            - LoggingFilter
            - JwtAuthenticationFilter
          # gateway 서버 통해서 구글 로그인 하려고하는데 잘 안되서 일단 그냥 다시 user-service 직접 보내는 것으로 작업
#        - id: user-service
#          uri: lb://USER-SERVICE
#          predicates:
#            - Path=/user-service/oauth2/authorization/**
#          filters:
#            - RemoveRequestHeader=Cookie
#            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
#            - CustomFilter
#            - LoggingFilter
#        - id: user-service
#          uri: lb://USER-SERVICE
#          predicates:
#            - Path=/user-service/login/oauth2/code/**
#          filters:
#            - RemoveRequestHeader=Cookie
#            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
#            - CustomFilter
#            - LoggingFilter
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/members
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - CustomFilter
            - LoggingFilter
            - JwtAuthenticationFilter
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/members/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - CustomFilter
            - LoggingFilter
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/members/my/timezone
            - Method=PUT
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - CustomFilter
            - LoggingFilter
            - JwtAuthenticationFilter
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/auth/token/refresh
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - CustomFilter
            - LoggingFilter
            - JwtAuthenticationFilterToken
---
#spring:
#  main:
#    web-application-type: reactive
